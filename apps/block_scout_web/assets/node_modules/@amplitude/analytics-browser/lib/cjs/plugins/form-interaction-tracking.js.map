{"version":3,"file":"form-interaction-tracking.js","sourceRoot":"","sources":["../../../src/plugins/form-interaction-tracking.ts"],"names":[],"mappings":"AAAA,iBAuFA;;;;AAvFA,8DAAgG;AAGhG,IAAM,gBAAgB,GAAG,YAAY,CAAC;AACtC,IAAM,iBAAiB,GAAG,aAAa,CAAC;AAEjC,IAAM,uBAAuB,GAAG;IACrC,IAAM,IAAI,GAAG,yBAAyB,CAAC;IACvC,IAAM,IAAI,GAAG,4BAAU,CAAC,UAAU,CAAC;IACnC,IAAM,KAAK,GAAG,UAAO,MAAqB,EAAE,SAAyB;;;YACnE,wBAAwB;YACxB,IAAI,CAAC,SAAS,EAAE;gBACd,qEAAqE;gBACrE,MAAM,CAAC,cAAc,CAAC,IAAI,CACxB,8HAA8H,CAC/H,CAAC;gBACF,sBAAO;aACR;YAEK,0BAA0B,GAAG,UAAC,IAAqB;gBACvD,IAAI,cAAc,GAAG,KAAK,CAAC;gBAE3B,IAAI,CAAC,gBAAgB,CACnB,QAAQ,EACR;oBACE,IAAI,CAAC,cAAc,EAAE;wBACnB,SAAS,CAAC,KAAK,CAAC,gBAAgB,EAAE;4BAChC,OAAO,EAAE,IAAI,CAAC,EAAE;4BAChB,SAAS,EAAE,IAAI,CAAC,IAAI;4BACpB,gBAAgB,EAAE,IAAI,CAAC,MAAM;yBAC9B,CAAC,CAAC;qBACJ;oBACD,cAAc,GAAG,IAAI,CAAC;gBACxB,CAAC,EACD,EAAE,CACH,CAAC;gBAEF,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE;oBAC9B,IAAI,CAAC,cAAc,EAAE;wBACnB,SAAS,CAAC,KAAK,CAAC,gBAAgB,EAAE;4BAChC,OAAO,EAAE,IAAI,CAAC,EAAE;4BAChB,SAAS,EAAE,IAAI,CAAC,IAAI;4BACpB,gBAAgB,EAAE,IAAI,CAAC,MAAM;yBAC9B,CAAC,CAAC;qBACJ;oBAED,SAAS,CAAC,KAAK,CAAC,iBAAiB,EAAE;wBACjC,OAAO,EAAE,IAAI,CAAC,EAAE;wBAChB,SAAS,EAAE,IAAI,CAAC,IAAI;wBACpB,gBAAgB,EAAE,IAAI,CAAC,MAAM;qBAC9B,CAAC,CAAC;oBACH,cAAc,GAAG,KAAK,CAAC;gBACzB,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;YAGI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC;YAChE,KAAK,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;YAE1C,wDAAwD;YACxD,0BAA0B;YAC1B,IAAI,OAAO,gBAAgB,KAAK,WAAW,EAAE;gBACrC,QAAQ,GAAG,IAAI,gBAAgB,CAAC,UAAC,SAAS;oBAC9C,SAAS,CAAC,OAAO,CAAC,UAAC,QAAQ;wBACzB,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,IAAI;4BAC/B,IAAI,IAAI,CAAC,QAAQ,KAAK,MAAM,EAAE;gCAC5B,0BAA0B,CAAC,IAAuB,CAAC,CAAC;6BACrD;wBACH,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE;oBAC9B,OAAO,EAAE,IAAI;oBACb,SAAS,EAAE,IAAI;iBAChB,CAAC,CAAC;aACJ;;;SACF,CAAC;IACF,IAAM,OAAO,GAAG,UAAO,KAAY;QAAK,sBAAA,KAAK,EAAA;aAAA,CAAC;IAE9C,OAAO;QACL,IAAI,MAAA;QACJ,IAAI,MAAA;QACJ,KAAK,OAAA;QACL,OAAO,SAAA;KACR,CAAC;AACJ,CAAC,CAAC;AAhFW,QAAA,uBAAuB,2BAgFlC","sourcesContent":["import { BrowserClient, PluginType, Event, EnrichmentPlugin } from '@amplitude/analytics-types';\nimport { BrowserConfig } from '../config';\n\nconst FORM_START_EVENT = 'form_start';\nconst FORM_SUBMIT_EVENT = 'form_submit';\n\nexport const formInteractionTracking = (): EnrichmentPlugin => {\n  const name = 'formInteractionTracking';\n  const type = PluginType.ENRICHMENT;\n  const setup = async (config: BrowserConfig, amplitude?: BrowserClient) => {\n    /* istanbul ignore if */\n    if (!amplitude) {\n      // TODO: Add required minimum version of @amplitude/analytics-browser\n      config.loggerProvider.warn(\n        'Form interaction tracking requires a later version of @amplitude/analytics-browser. Form interaction events are not tracked.',\n      );\n      return;\n    }\n\n    const addFormInteractionListener = (form: HTMLFormElement) => {\n      let hasFormChanged = false;\n\n      form.addEventListener(\n        'change',\n        () => {\n          if (!hasFormChanged) {\n            amplitude.track(FORM_START_EVENT, {\n              form_id: form.id,\n              form_name: form.name,\n              form_destination: form.action,\n            });\n          }\n          hasFormChanged = true;\n        },\n        {},\n      );\n\n      form.addEventListener('submit', () => {\n        if (!hasFormChanged) {\n          amplitude.track(FORM_START_EVENT, {\n            form_id: form.id,\n            form_name: form.name,\n            form_destination: form.action,\n          });\n        }\n\n        amplitude.track(FORM_SUBMIT_EVENT, {\n          form_id: form.id,\n          form_name: form.name,\n          form_destination: form.action,\n        });\n        hasFormChanged = false;\n      });\n    };\n\n    // Adds listener to existing anchor tags\n    const forms = Array.from(document.getElementsByTagName('form'));\n    forms.forEach(addFormInteractionListener);\n\n    // Adds listener to anchor tags added after initial load\n    /* istanbul ignore else */\n    if (typeof MutationObserver !== 'undefined') {\n      const observer = new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n          mutation.addedNodes.forEach((node) => {\n            if (node.nodeName === 'FORM') {\n              addFormInteractionListener(node as HTMLFormElement);\n            }\n          });\n        });\n      });\n\n      observer.observe(document.body, {\n        subtree: true,\n        childList: true,\n      });\n    }\n  };\n  const execute = async (event: Event) => event;\n\n  return {\n    name,\n    type,\n    setup,\n    execute,\n  };\n};\n"]}