{"version":3,"file":"plugin.js","sourceRoot":"","sources":["../../src/plugin.ts"],"names":[],"mappings":"AAKA,MAAM,CAAN,IAAY,UAIX;AAJD,WAAY,UAAU;IACpB,+BAAiB,CAAA;IACjB,uCAAyB,CAAA;IACzB,yCAA2B,CAAA;AAC7B,CAAC,EAJW,UAAU,KAAV,UAAU,QAIrB","sourcesContent":["import { Event } from './event';\nimport { Config } from './config';\nimport { Result } from './result';\nimport { BaseClient } from './client/base-client';\n\nexport enum PluginType {\n  BEFORE = 'before',\n  ENRICHMENT = 'enrichment',\n  DESTINATION = 'destination',\n}\n\nexport interface BeforePlugin<T = BaseClient> {\n  name: string;\n  type: PluginType.BEFORE;\n  setup(config: Config, client?: T): Promise<void>;\n  execute(context: Event): Promise<Event>;\n}\n\nexport interface EnrichmentPlugin<T = BaseClient> {\n  name: string;\n  type: PluginType.ENRICHMENT;\n  setup(config: Config, client?: T): Promise<void>;\n  execute(context: Event): Promise<Event>;\n}\n\nexport interface DestinationPlugin<T = BaseClient> {\n  name: string;\n  type: PluginType.DESTINATION;\n  setup(config: Config, client?: T): Promise<void>;\n  execute(context: Event): Promise<Result>;\n  flush?(): Promise<void>;\n}\n\nexport type Plugin = BeforePlugin | EnrichmentPlugin | DestinationPlugin;\n"]}