2023-05-26T17:16:46.396 fetcher=coin_balance count=74 [error] Task #PID<0.8485.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:16:49.397 fetcher=coin_balance count=74 [error] Task #PID<0.8440.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:16:52.398 fetcher=coin_balance count=74 [error] Task #PID<0.8527.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:16:55.399 fetcher=coin_balance count=74 [error] Task #PID<0.8564.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:16:58.400 fetcher=coin_balance count=74 [error] Task #PID<0.8553.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:01.403 fetcher=coin_balance count=74 [error] Task #PID<0.8567.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:04.402 fetcher=coin_balance count=74 [error] Task #PID<0.8579.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:07.403 fetcher=coin_balance count=74 [error] Task #PID<0.8608.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:10.404 fetcher=coin_balance count=74 [error] Task #PID<0.8622.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:13.405 fetcher=coin_balance count=74 [error] Task #PID<0.8631.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:16.406 fetcher=coin_balance count=74 [error] Task #PID<0.8670.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:19.409 fetcher=coin_balance count=74 [error] Task #PID<0.8690.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:22.408 fetcher=coin_balance count=74 [error] Task #PID<0.8700.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:25.409 fetcher=coin_balance count=74 [error] Task #PID<0.8703.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:28.410 fetcher=coin_balance count=74 [error] Task #PID<0.8752.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:31.411 fetcher=coin_balance count=74 [error] Task #PID<0.8760.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:34.417 fetcher=coin_balance count=74 [error] Task #PID<0.8779.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:37.415 fetcher=coin_balance count=74 [error] Task #PID<0.8792.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:40.418 fetcher=coin_balance count=74 [error] Task #PID<0.8788.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:43.416 fetcher=coin_balance count=74 [error] Task #PID<0.8802.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:46.418 fetcher=coin_balance count=74 [error] Task #PID<0.8796.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:49.420 fetcher=coin_balance count=74 [error] Task #PID<0.8893.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:52.421 fetcher=coin_balance count=74 [error] Task #PID<0.8918.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:55.423 fetcher=coin_balance count=74 [error] Task #PID<0.8950.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:17:58.422 fetcher=coin_balance count=74 [error] Task #PID<0.8940.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:01.423 fetcher=coin_balance count=74 [error] Task #PID<0.8914.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:04.425 fetcher=coin_balance count=74 [error] Task #PID<0.8961.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:07.427 fetcher=coin_balance count=74 [error] Task #PID<0.8978.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:10.427 fetcher=coin_balance count=74 [error] Task #PID<0.8969.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:13.438 fetcher=coin_balance count=74 [error] Task #PID<0.9008.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:16.429 fetcher=coin_balance count=74 [error] Task #PID<0.9073.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:19.429 fetcher=coin_balance count=74 [error] Task #PID<0.9046.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:22.430 fetcher=coin_balance count=74 [error] Task #PID<0.9074.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:25.431 fetcher=coin_balance count=74 [error] Task #PID<0.9062.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:28.432 fetcher=coin_balance count=74 [error] Task #PID<0.9095.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:31.433 fetcher=coin_balance count=74 [error] Task #PID<0.9103.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:34.435 fetcher=coin_balance count=74 [error] Task #PID<0.8540.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:37.436 fetcher=coin_balance count=74 [error] Task #PID<0.9155.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:40.436 fetcher=coin_balance count=74 [error] Task #PID<0.9174.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:43.437 fetcher=coin_balance count=74 [error] Task #PID<0.9185.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:46.438 fetcher=coin_balance count=74 [error] Task #PID<0.9161.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:49.440 fetcher=coin_balance count=74 [error] Task #PID<0.9231.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:52.441 fetcher=coin_balance count=74 [error] Task #PID<0.9252.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:55.442 fetcher=coin_balance count=74 [error] Task #PID<0.9282.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:18:58.442 fetcher=coin_balance count=74 [error] Task #PID<0.9269.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:01.443 fetcher=coin_balance count=74 [error] Task #PID<0.9289.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:04.444 fetcher=coin_balance count=74 [error] Task #PID<0.9299.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:07.446 fetcher=coin_balance count=74 [error] Task #PID<0.9292.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:10.520 fetcher=coin_balance count=74 [error] Task #PID<0.9291.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:13.448 fetcher=coin_balance count=74 [error] Task #PID<0.9344.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:16.448 fetcher=coin_balance count=74 [error] Task #PID<0.9382.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:19.449 fetcher=coin_balance count=74 [error] Task #PID<0.9402.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:22.451 fetcher=coin_balance count=74 [error] Task #PID<0.9416.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:25.451 fetcher=coin_balance count=74 [error] Task #PID<0.9353.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:28.452 fetcher=coin_balance count=74 [error] Task #PID<0.9437.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:31.455 fetcher=coin_balance count=74 [error] Task #PID<0.9471.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:34.457 fetcher=coin_balance count=74 [error] Task #PID<0.9491.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:37.460 fetcher=coin_balance count=74 [error] Task #PID<0.9522.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:40.456 fetcher=coin_balance count=74 [error] Task #PID<0.9531.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:43.461 fetcher=coin_balance count=74 [error] Task #PID<0.9562.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:46.459 fetcher=coin_balance count=74 [error] Task #PID<0.9553.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:49.460 fetcher=coin_balance count=74 [error] Task #PID<0.9559.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:52.460 fetcher=coin_balance count=74 [error] Task #PID<0.9619.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:55.461 fetcher=coin_balance count=74 [error] Task #PID<0.9629.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:19:58.462 fetcher=coin_balance count=74 [error] Task #PID<0.9652.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:01.466 fetcher=coin_balance count=74 [error] Task #PID<0.9682.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:04.466 fetcher=coin_balance count=74 [error] Task #PID<0.9672.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:07.467 fetcher=coin_balance count=74 [error] Task #PID<0.9700.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:10.515 fetcher=coin_balance count=74 [error] Task #PID<0.9694.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:13.526 fetcher=coin_balance count=74 [error] Task #PID<0.9710.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:16.478 fetcher=coin_balance count=74 [error] Task #PID<0.9772.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:19.478 fetcher=coin_balance count=74 [error] Task #PID<0.9794.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:22.480 fetcher=coin_balance count=74 [error] Task #PID<0.9799.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:25.482 fetcher=coin_balance count=74 [error] Task #PID<0.9808.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:28.482 fetcher=coin_balance count=74 [error] Task #PID<0.9749.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:31.484 fetcher=coin_balance count=74 [error] Task #PID<0.9806.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:34.483 fetcher=coin_balance count=74 [error] Task #PID<0.9837.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:37.484 fetcher=coin_balance count=74 [error] Task #PID<0.9858.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:40.486 fetcher=coin_balance count=74 [error] Task #PID<0.9885.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:43.487 fetcher=coin_balance count=74 [error] Task #PID<0.9906.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:46.488 fetcher=coin_balance count=74 [error] Task #PID<0.9883.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:49.489 fetcher=coin_balance count=74 [error] Task #PID<0.9901.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:52.490 fetcher=coin_balance count=74 [error] Task #PID<0.9912.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:55.491 fetcher=coin_balance count=74 [error] Task #PID<0.9979.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:20:58.491 fetcher=coin_balance count=74 [error] Task #PID<0.9993.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:21:01.492 fetcher=coin_balance count=74 [error] Task #PID<0.9977.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:21:04.493 fetcher=coin_balance count=74 [error] Task #PID<0.10013.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:21:07.495 fetcher=coin_balance count=74 [error] Task #PID<0.10034.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:21:10.495 fetcher=coin_balance count=74 [error] Task #PID<0.10011.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:21:13.498 fetcher=coin_balance count=74 [error] Task #PID<0.10039.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:21:16.498 fetcher=coin_balance count=74 [error] Task #PID<0.10114.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:21:19.498 fetcher=coin_balance count=74 [error] Task #PID<0.10128.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:21:22.499 fetcher=coin_balance count=74 [error] Task #PID<0.10159.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:21:25.500 fetcher=coin_balance count=74 [error] Task #PID<0.10158.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:21:28.501 fetcher=coin_balance count=74 [error] Task #PID<0.10178.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:21:31.503 fetcher=coin_balance count=74 [error] Task #PID<0.10150.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:21:34.503 fetcher=coin_balance count=74 [error] Task #PID<0.10179.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
