2023-05-26T17:21:37.522 fetcher=coin_balance count=74 [error] Task #PID<0.10191.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:21:40.521 fetcher=coin_balance count=74 [error] Task #PID<0.10197.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:21:43.517 fetcher=coin_balance count=74 [error] Task #PID<0.10279.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:21:46.518 fetcher=coin_balance count=74 [error] Task #PID<0.10282.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:21:49.520 fetcher=coin_balance count=74 [error] Task #PID<0.10298.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:21:52.521 fetcher=coin_balance count=74 [error] Task #PID<0.10294.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:21:55.522 fetcher=coin_balance count=74 [error] Task #PID<0.10284.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:21:58.523 fetcher=coin_balance count=74 [error] Task #PID<0.10323.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:01.524 fetcher=coin_balance count=74 [error] Task #PID<0.10355.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:04.524 fetcher=coin_balance count=74 [error] Task #PID<0.10354.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:07.525 fetcher=coin_balance count=74 [error] Task #PID<0.10389.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:10.526 fetcher=coin_balance count=74 [error] Task #PID<0.10391.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:13.527 fetcher=coin_balance count=74 [error] Task #PID<0.10340.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:16.528 fetcher=coin_balance count=74 [error] Task #PID<0.10451.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:19.529 fetcher=coin_balance count=74 [error] Task #PID<0.2728.33> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:22.530 fetcher=coin_balance count=74 [error] Task #PID<0.10490.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:25.532 fetcher=coin_balance count=74 [error] Task #PID<0.10504.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:28.532 fetcher=coin_balance count=74 [error] Task #PID<0.10519.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:31.533 fetcher=coin_balance count=74 [error] Task #PID<0.7540.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:34.535 fetcher=coin_balance count=74 [error] Task #PID<0.10520.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:37.535 fetcher=coin_balance count=74 [error] Task #PID<0.10548.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:40.536 fetcher=coin_balance count=74 [error] Task #PID<0.10582.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:43.538 fetcher=coin_balance count=74 [error] Task #PID<0.10616.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:46.538 fetcher=coin_balance count=74 [error] Task #PID<0.10682.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:49.540 fetcher=coin_balance count=74 [error] Task #PID<0.10674.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:52.541 fetcher=coin_balance count=74 [error] Task #PID<0.10665.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:55.541 fetcher=coin_balance count=74 [error] Task #PID<0.10658.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:22:58.543 fetcher=coin_balance count=74 [error] Task #PID<0.10710.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:01.543 fetcher=coin_balance count=74 [error] Task #PID<0.10727.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:04.544 fetcher=coin_balance count=74 [error] Task #PID<0.10755.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:07.545 fetcher=coin_balance count=74 [error] Task #PID<0.10765.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:10.547 fetcher=coin_balance count=74 [error] Task #PID<0.10748.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:13.547 fetcher=coin_balance count=74 [error] Task #PID<0.10774.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:16.549 fetcher=coin_balance count=74 [error] Task #PID<0.10826.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:19.549 fetcher=coin_balance count=74 [error] Task #PID<0.9426.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:22.551 fetcher=coin_balance count=74 [error] Task #PID<0.10852.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:25.551 fetcher=coin_balance count=74 [error] Task #PID<0.10889.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:28.553 fetcher=coin_balance count=74 [error] Task #PID<0.10897.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:31.554 fetcher=coin_balance count=74 [error] Task #PID<0.10866.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:34.554 fetcher=coin_balance count=74 [error] Task #PID<0.10907.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:37.556 fetcher=coin_balance count=74 [error] Task #PID<0.10868.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:40.556 fetcher=coin_balance count=74 [error] Task #PID<0.10906.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:43.557 fetcher=coin_balance count=74 [error] Task #PID<0.11031.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:46.558 fetcher=coin_balance count=74 [error] Task #PID<0.11055.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:49.560 fetcher=coin_balance count=74 [error] Task #PID<0.11056.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:52.560 fetcher=coin_balance count=74 [error] Task #PID<0.11064.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:55.561 fetcher=coin_balance count=74 [error] Task #PID<0.11061.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:23:58.563 fetcher=coin_balance count=74 [error] Task #PID<0.11080.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:01.563 fetcher=coin_balance count=74 [error] Task #PID<0.11077.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:04.564 fetcher=coin_balance count=74 [error] Task #PID<0.11113.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:07.566 fetcher=coin_balance count=74 [error] Task #PID<0.11183.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:10.566 fetcher=coin_balance count=74 [error] Task #PID<0.11208.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:13.567 fetcher=coin_balance count=74 [error] Task #PID<0.11199.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:16.568 fetcher=coin_balance count=74 [error] Task #PID<0.11216.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:19.570 fetcher=coin_balance count=74 [error] Task #PID<0.11262.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:22.570 fetcher=coin_balance count=74 [error] Task #PID<0.11289.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:25.571 fetcher=coin_balance count=74 [error] Task #PID<0.11300.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:28.573 fetcher=coin_balance count=74 [error] Task #PID<0.11333.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:31.573 fetcher=coin_balance count=74 [error] Task #PID<0.11318.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:34.574 fetcher=coin_balance count=74 [error] Task #PID<0.11336.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:37.575 fetcher=coin_balance count=74 [error] Task #PID<0.11332.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:40.577 fetcher=coin_balance count=74 [error] Task #PID<0.11317.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:43.577 fetcher=coin_balance count=74 [error] Task #PID<0.11381.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:46.579 fetcher=coin_balance count=74 [error] Task #PID<0.11465.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:49.580 fetcher=coin_balance count=74 [error] Task #PID<0.11463.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:52.581 fetcher=coin_balance count=74 [error] Task #PID<0.11444.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:55.582 fetcher=coin_balance count=74 [error] Task #PID<0.11414.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:24:58.582 fetcher=coin_balance count=74 [error] Task #PID<0.11479.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:01.584 fetcher=coin_balance count=74 [error] Task #PID<0.11494.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:04.584 fetcher=coin_balance count=74 [error] Task #PID<0.11541.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:07.585 fetcher=coin_balance count=74 [error] Task #PID<0.11556.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:10.586 fetcher=coin_balance count=74 [error] Task #PID<0.11552.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:13.587 fetcher=coin_balance count=74 [error] Task #PID<0.11559.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:16.588 fetcher=coin_balance count=74 [error] Task #PID<0.11554.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:19.590 fetcher=coin_balance count=74 [error] Task #PID<0.11597.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:22.590 fetcher=coin_balance count=74 [error] Task #PID<0.11624.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:25.591 fetcher=coin_balance count=74 [error] Task #PID<0.11687.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:28.592 fetcher=coin_balance count=74 [error] Task #PID<0.11698.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:31.593 fetcher=coin_balance count=74 [error] Task #PID<0.11699.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:34.594 fetcher=coin_balance count=74 [error] Task #PID<0.11691.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:37.600 fetcher=coin_balance count=74 [error] Task #PID<0.11688.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:40.597 fetcher=coin_balance count=74 [error] Task #PID<0.11695.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:43.597 fetcher=coin_balance count=74 [error] Task #PID<0.11798.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:46.599 fetcher=coin_balance count=74 [error] Task #PID<0.11815.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:49.599 fetcher=coin_balance count=74 [error] Task #PID<0.11819.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:52.601 fetcher=coin_balance count=74 [error] Task #PID<0.11834.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:55.602 fetcher=coin_balance count=74 [error] Task #PID<0.11848.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:25:58.602 fetcher=coin_balance count=74 [error] Task #PID<0.11842.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:26:01.604 fetcher=coin_balance count=74 [error] Task #PID<0.11866.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:26:04.604 fetcher=coin_balance count=74 [error] Task #PID<0.11893.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:26:07.605 fetcher=coin_balance count=74 [error] Task #PID<0.11894.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:26:10.608 fetcher=coin_balance count=74 [error] Task #PID<0.11907.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:26:13.608 fetcher=coin_balance count=74 [error] Task #PID<0.11908.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:26:16.609 fetcher=coin_balance count=74 [error] Task #PID<0.11881.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:26:19.611 fetcher=coin_balance count=74 [error] Task #PID<0.11906.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:26:22.611 fetcher=coin_balance count=74 [error] Task #PID<0.11981.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:26:25.612 fetcher=coin_balance count=74 [error] Task #PID<0.12015.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
