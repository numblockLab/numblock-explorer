2023-05-26T17:26:28.612 fetcher=coin_balance count=74 [error] Task #PID<0.12040.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:26:31.613 fetcher=coin_balance count=74 [error] Task #PID<0.12047.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:26:34.614 fetcher=coin_balance count=74 [error] Task #PID<0.12056.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:26:37.615 fetcher=coin_balance count=74 [error] Task #PID<0.12060.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:26:40.616 fetcher=coin_balance count=74 [error] Task #PID<0.12062.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:26:43.617 fetcher=coin_balance count=74 [error] Task #PID<0.12093.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:26:46.618 fetcher=coin_balance count=74 [error] Task #PID<0.12110.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:26:49.619 fetcher=coin_balance count=74 [error] Task #PID<0.12172.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:26:52.620 fetcher=coin_balance count=74 [error] Task #PID<0.12165.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:26:55.622 fetcher=coin_balance count=74 [error] Task #PID<0.12175.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:26:58.622 fetcher=coin_balance count=74 [error] Task #PID<0.12180.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:01.625 fetcher=coin_balance count=74 [error] Task #PID<0.12210.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:04.625 fetcher=coin_balance count=74 [error] Task #PID<0.12220.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:07.626 fetcher=coin_balance count=74 [error] Task #PID<0.12254.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:10.628 fetcher=coin_balance count=74 [error] Task #PID<0.12230.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:13.629 fetcher=coin_balance count=74 [error] Task #PID<0.12283.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:16.630 fetcher=coin_balance count=74 [error] Task #PID<0.12257.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:19.631 fetcher=coin_balance count=74 [error] Task #PID<0.12222.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:22.632 fetcher=coin_balance count=74 [error] Task #PID<0.12327.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:25.633 fetcher=coin_balance count=74 [error] Task #PID<0.12356.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:27.271 application=indexer fetcher=block_realtime block_number=60048 [error] failed to fetch block: [%{code: 404, data: %{number: 60048}, message: "Not Found"}].  Block will be retried by catchup indexer.
2023-05-26T17:27:28.633 fetcher=coin_balance count=74 [error] Task #PID<0.12342.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:31.635 fetcher=coin_balance count=74 [error] Task #PID<0.12402.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:34.636 fetcher=coin_balance count=74 [error] Task #PID<0.12407.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:37.636 fetcher=coin_balance count=74 [error] Task #PID<0.12410.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:40.637 fetcher=coin_balance count=74 [error] Task #PID<0.12353.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:43.639 fetcher=coin_balance count=74 [error] Task #PID<0.12424.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:46.639 fetcher=coin_balance count=74 [error] Task #PID<0.12474.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:49.641 fetcher=coin_balance count=74 [error] Task #PID<0.12478.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:52.642 fetcher=coin_balance count=74 [error] Task #PID<0.12532.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:55.642 fetcher=coin_balance count=74 [error] Task #PID<0.12502.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:27:58.643 fetcher=coin_balance count=74 [error] Task #PID<0.12529.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:01.644 fetcher=coin_balance count=74 [error] Task #PID<0.12544.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:04.646 fetcher=coin_balance count=74 [error] Task #PID<0.12545.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:07.646 fetcher=coin_balance count=74 [error] Task #PID<0.12585.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:10.648 fetcher=coin_balance count=74 [error] Task #PID<0.12607.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:13.651 fetcher=coin_balance count=74 [error] Task #PID<0.12629.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:16.650 fetcher=coin_balance count=74 [error] Task #PID<0.12630.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:19.652 fetcher=coin_balance count=74 [error] Task #PID<0.12613.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:22.457 application=indexer fetcher=block_realtime block_number=60060 [error] failed to fetch block: [%{code: 404, data: %{number: 60060}, message: "Not Found"}].  Block will be retried by catchup indexer.
2023-05-26T17:28:22.653 fetcher=coin_balance count=74 [error] Task #PID<0.12627.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:25.662 fetcher=coin_balance count=74 [error] Task #PID<0.12646.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:28.655 fetcher=coin_balance count=74 [error] Task #PID<0.12678.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:31.658 fetcher=coin_balance count=74 [error] Task #PID<0.12682.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:34.659 fetcher=coin_balance count=74 [error] Task #PID<0.12720.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:37.659 fetcher=coin_balance count=74 [error] Task #PID<0.12732.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:40.665 fetcher=coin_balance count=74 [error] Task #PID<0.12738.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:43.661 fetcher=coin_balance count=74 [error] Task #PID<0.12736.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:45.529 application=indexer fetcher=block_catchup first_block_number=60060 last_block_number=60060 [error] ** (KeyError) key "0x9bd3151d1937afad8f0bb40db85794d530ae01fd" not found in: %{"0x266eAd45a3620E0580FC01407115E08e5cE1f753" => 60060, "0x46cB69116A21D8777Ea050e0265Abaf45E61a9Fb" => 60060, "0x4B0B16d3b5bAE7E23Fc8359A4bfF3133f648f0ce" => 60060, "0x4ca10a89424280fc696f60d16a8de30039acdc55" => 60060, "0x5A42003B96f8D5143E67eBea8B0400708f866fef" => 60060, "0x72BdADb18921a6e08b38F9B6A6DAAFD130AF323e" => 60060, "0x8b622D5c3BDE6b869Ac613AB33ec1bd9f03d639a" => 60060, "0x9Bd3151D1937afad8f0Bb40Db85794D530aE01Fd" => 60060, "0xa99e5DeEf6df01Ece5801F2fcb2D6021260C2d75" => 60060}
    :erlang.map_get("0x9bd3151d1937afad8f0bb40db85794d530ae01fd", %{"0x266eAd45a3620E0580FC01407115E08e5cE1f753" => 60060, "0x46cB69116A21D8777Ea050e0265Abaf45E61a9Fb" => 60060, "0x4B0B16d3b5bAE7E23Fc8359A4bfF3133f648f0ce" => 60060, "0x4ca10a89424280fc696f60d16a8de30039acdc55" => 60060, "0x5A42003B96f8D5143E67eBea8B0400708f866fef" => 60060, "0x72BdADb18921a6e08b38F9B6A6DAAFD130AF323e" => 60060, "0x8b622D5c3BDE6b869Ac613AB33ec1bd9f03d639a" => 60060, "0x9Bd3151D1937afad8f0Bb40Db85794D530aE01Fd" => 60060, "0xa99e5DeEf6df01Ece5801F2fcb2D6021260C2d75" => 60060})
    (indexer 5.1.1) lib/indexer/block/fetcher.ex:274: anonymous fn/2 in Indexer.Block.Fetcher.async_import_coin_balances/2
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (indexer 5.1.1) lib/indexer/block/fetcher.ex:273: Indexer.Block.Fetcher.async_import_coin_balances/2
    (indexer 5.1.1) lib/indexer/block/catchup/fetcher.ex:143: Indexer.Block.Catchup.Fetcher.async_import_remaining_block_data/2
    (indexer 5.1.1) lib/indexer/block/catchup/fetcher.ex:129: Indexer.Block.Catchup.Fetcher.import/2
    (stdlib 3.17) timer.erl:166: :timer.tc/1
    (indexer 5.1.1) lib/indexer/block/fetcher.ex:244: Indexer.Block.Fetcher.import/2


Retrying.
2023-05-26T17:28:46.661 fetcher=coin_balance count=74 [error] Task #PID<0.12799.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:49.662 fetcher=coin_balance count=74 [error] Task #PID<0.12810.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:52.665 fetcher=coin_balance count=74 [error] Task #PID<0.12835.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:55.664 fetcher=coin_balance count=74 [error] Task #PID<0.12875.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:28:58.667 fetcher=coin_balance count=74 [error] Task #PID<0.12878.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:29:01.667 fetcher=coin_balance count=74 [error] Task #PID<0.12858.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:29:04.667 fetcher=coin_balance count=74 [error] Task #PID<0.12874.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:29:07.669 fetcher=coin_balance count=74 [error] Task #PID<0.12901.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
2023-05-26T17:29:10.670 fetcher=coin_balance count=74 [error] Task #PID<0.12917.34> started from Indexer.Fetcher.CoinBalance terminating
** (FunctionClauseError) no function clause matching in EthereumJSONRPC.HTTP.standardize_response/1
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:145: EthereumJSONRPC.HTTP.standardize_response(%{"error" => %{"code" => -32600, "message" => "Batch request length too long"}, "jsonrpc" => "2.0"})
    (elixir 1.13.4) lib/enum.ex:1593: Enum."-map/2-lists^map/1-0-"/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/http.ex:44: EthereumJSONRPC.HTTP.chunked_json_rpc/3
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:86: anonymous fn/3 in EthereumJSONRPC.RequestCoordinator.perform/4
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc/request_coordinator.ex:106: EthereumJSONRPC.RequestCoordinator.trace_request/2
    (ethereum_jsonrpc 5.1.1) lib/ethereum_jsonrpc.ex:203: EthereumJSONRPC.fetch_balances/2
    (indexer 5.1.1) lib/indexer/fetcher/coin_balance.ex:92: Indexer.Fetcher.CoinBalance.run/2
    (elixir 1.13.4) lib/task/supervised.ex:89: Task.Supervised.invoke_mfa/2
Function: &Indexer.BufferedTask.log_run/1
    Args: [%{batch: [{<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 4}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 3}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 1}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 20}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 24}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 28}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 19}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 23}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 27}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 12}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 21}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 25}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 22}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 26}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, 172, 220, 85>>, 16}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 11}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, 187, 86, 77, 124, 25, 8, 65, 67>>, 15}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 9}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 13}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 17}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 10}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 14}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 18}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 310}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, 152>>, 2557}, {<<237, 112, 6, 212, 77, 53, 93, 110, 28, 127, 171, 27, 213, 26, 101, 73, 21, 169, 30, 221>>, 2250}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, 25, 192, 26, 84, 186, 214, 32, 18, 156, ...>>, 481}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, 94, 97, ...>>, 484}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, 227, 0, 57, ...>>, 484}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, 244, ...>>, 486}, {<<70, 203, 105, 17, 106, 33, 216, 119, 126, 160, 80, 224, 38, 90, 186, ...>>, 490}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, 141, ...>>, 488}, {<<76, 161, 10, 137, 66, 66, 128, 252, 105, 111, 96, 209, 106, ...>>, 492}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, 68, ...>>, 487}, {<<137, 114, 52, 150, 84, 159, 163, 186, 129, 40, 94, ...>>, 491}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, 50, ...>>, 485}, {<<225, 187, 152, 62, 70, 112, 191, 100, 9, ...>>, 489}, {<<225, 187, 152, 62, 70, 112, 191, 100, ...>>, 493}, {<<237, 112, 6, 212, 77, 53, 93, ...>>, 486}, {<<237, 112, 6, 212, 77, 53, ...>>, 490}, {<<237, 112, 6, 212, 77, ...>>, 494}, {<<38, 110, 173, 69, ...>>, 2377}, {<<75, 11, 22, ...>>, 2377}, {<<90, 66, ...>>, 2377}, {<<114, ...>>, 2377}, {<<...>>, ...}, {...}, ...], callback_module: Indexer.Fetcher.CoinBalance, callback_module_state: [transport: EthereumJSONRPC.HTTP, transport_options: [http: EthereumJSONRPC.HTTP.HTTPoison, url: "http://127.0.0.1:5000/", http_options: [recv_timeout: 600000, timeout: 600000, hackney: [pool: :ethereum_jsonrpc]]], variant: EthereumJSONRPC.Geth], metadata: [fetcher: :coin_balance]}]
